<!-- /snippets/collection-sorting.liquid -->

{% comment %}
  Toggle between collection.liquid and collection.list.liquid with the
  ?view= parameter.
{% endcomment %}

{% if collection.title contains 'Tees & Tanks' or collection.title contains 'Jackets' or collection.title contains 'Knits' or collection.title contains 'Sweatshirts' or collection.title contains 'Shirts' or collection.title contains 'Fall 17' %}
{% if template contains 'list' %}
<button type="button" title="{{ 'collections.general.grid_view' | t }}" class="change-view{% unless template contains 'list' %} change-view--active{% endunless %}" data-view="grid">
  <span>{% if collection.title contains 'Womens' %}ON MODEL{% else %}SHOW LESS{% endif %}</span>
</button>
{% else %}
<button type="button" title="{{ 'collections.general.list_view' | t }}" class="change-view{% if template contains 'list' %} change-view--active{% endif %}" data-view="list">
  <span>ALL COLORS</span>
</button>
{% endif %}

{% else %}
{% if template contains 'list' %}
<button type="button" title="{{ 'collections.general.grid_view' | t }}" class="large--hide change-view{% unless template contains 'list' %} change-view--active{% endunless %}" data-view="grid">
  <span>SHOW GRID</span>
</button>
{% else %}
<button type="button" title="{{ 'collections.general.list_view' | t }}" class="large--hide change-view{% if template contains 'list' %} change-view--active{% endif %}" data-view="list">
  <span>SHOW LIST</span>
</button>
{% endif %}
{% endif %}

{% comment %}
<li class="collection--filter-list-view large--hide">
  <div class="collection--view collection--filter-list-view">
    <button type="button" title="{{ 'collections.general.grid_view' | t }}" class="change-view{% unless template contains 'list' %} change-view--active{% endunless %}" data-view="grid">
      <span class="icon-fallback-text">
        <span class="icon icon-grid-view" aria-hidden="true"></span>
        <span class="fallback-text">{{ 'collections.general.grid_view' | t }}</span>
      </span>
    </button>
    <button type="button" title="{{ 'collections.general.list_view' | t }}" class="change-view{% if template contains 'list' %} change-view--active{% endif %}" data-view="list">
      <span class="icon-fallback-text">
        <span class="icon icon-list-view" aria-hidden="true"></span>
        <span class="fallback-text">{{ 'collections.general.list_view' | t }}</span>
      </span>
    </button>
  </div>
</li>

<li class="collection--filter-list-sort medium-down--hide large--hide">
  <select name="SortBy" id="SortBy">
    <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
    <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
    <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
    <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
    <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
    <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
    <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
    <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
  </select>
</li>
{% endcomment %}

<script>
  /*============================================================================
    Inline JS because collection liquid object is only available
    on collection pages and not external JS files
  ==============================================================================*/
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }

  $(function() {
    $('#SortBy')
      .val('{{ collection.sort_by | default: collection.default_sort_by }}')
      .bind('change', function() {
        Shopify.queryParams.sort_by = jQuery(this).val();
        location.search = jQuery.param(Shopify.queryParams);
      }
    );
  });
</script>
