<!-- /templates/product.liquid -->

{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div class="grid--full">
  <div class="grid__item border--lookbook">
    <h6 class="btn text-center" style="width: 100%;">We are in the process of enhancing our wetsuit builder. <br> If you would like to purchase a wetsuit please call us at 1-844-786-8619</h6>
  </div>
</div>
<div class="grid--full">
  <div class="grid__item large--one-half border">
    <img class="image-zoom" id="ProductPhotoImg" src="https://cdn.shopify.com/s/files/1/1968/8409/files/Imperial_Motion_Lux_Wetsuit-1.jpg?518178794354841474" alt="{{ image.alt | escape }}  data-zoom="{{ featured_image | img_url: 'original', scale: 3 }}>
  </div>
  <div class="grid__item large--one-half border">
    <h1>{{ product.title }}</h1>
    {{ product.description }}
  </div>
</div>


<script>
$(document).ready(function() {
  thumbnails = $('img[src*="/products/"]').not(':first');
  if (thumbnails.length) {
    thumbnails.bind('click', function() {
      var arrImage = $(this).attr('src').split('?')[0].split('.');
      var strExtention = arrImage.pop();
      var strRemaining = arrImage.pop().replace(/_[a-zA-Z0-9@]+$/,'');
      var strNewImage = arrImage.join('.')+"."+strRemaining+"."+strExtention;
      if (typeof variantImages[strNewImage] !== 'undefined') {
          productOptions.forEach(function (value, i) {
           optionValue = variantImages[strNewImage]['option-'+i];
           if (optionValue !== null && $('.single-option-selector:eq('+i+') option').filter(function() { return $(this).text() === optionValue }).length) {
             $('.single-option-selector:eq('+i+')').val(optionValue).trigger('change');
           }
        });
      }
    });
  }
});
</script>



<script text="text/javascript">
  var _learnq = _learnq || [];

  var item = {
    Name: {{ product.title|json }},
    ProductID: {{ product.id|json }},
    Categories: {{ product.collections|map:'title'|json }},
    ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
    URL: "{{ shop.secure_url }}{{ product.url }}",
    Brand: {{ product.vendor|json }},
    Price: {{ product.price|money|json }},
    CompareAtPrice: {{ product.compare_at_price_max|money|json }}
  };

  _learnq.push(['track', 'Viewed Product', item]);
  _learnq.push(['trackViewedItem', {
    Title: item.Name,
    ItemId: item.ProductID,
    Categories: item.Categories,
    ImageUrl: item.ImageURL,
    Url: item.URL,
    Metadata: {
      Brand: item.Brand,
      Price: item.Price,
      CompareAtPrice: item.CompareAtPrice
    }
  }]);
</script>
